package edu.poly.nexttrip

import android.os.Bundle
import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import android.widget.LinearLayout
import android.widget.TextView
import androidx.fragment.app.Fragment
import androidx.recyclerview.widget.LinearLayoutManager
import androidx.recyclerview.widget.RecyclerView

class MyTrip_UpcomingFragment : Fragment() {

    private lateinit var emptyLayout: LinearLayout
    private lateinit var tripRecyclerView: RecyclerView
    private lateinit var txtNoTrip: TextView

    override fun onCreateView(
        inflater: LayoutInflater, container: ViewGroup?,
        savedInstanceState: Bundle?
    ): View? {
        return inflater.inflate(R.layout.fragment_my_trip__upcoming, container, false)
    }

    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
        super.onViewCreated(view, savedInstanceState)

        // √Ånh x·∫° c√°c view
        emptyLayout = view.findViewById(R.id.emptyLayout)
        tripRecyclerView = view.findViewById(R.id.recyclerTrip)
        txtNoTrip = view.findViewById(R.id.txtNoTrip)

        // üß† L·∫•y t√™n ng∆∞·ªùi d√πng (·ªü ƒë√¢y hardcode, b·∫°n c√≥ th·ªÉ l·∫•y t·ª´ SharedPreferences)
        val userName = "Tho N"
        txtNoTrip.text = "Xin ch√†o $userName.. Qu√Ω kh√°ch kh√¥ng c√≥ chuy·∫øn ƒëi s·∫Øp t·ªõi n√†o"

        // üîÑ L·∫•y danh s√°ch chuy·∫øn ƒëi s·∫Øp t·ªõi
        val listTrips = getUpcomingTrips()

        if (listTrips.isEmpty()) {
            // ‚ùå Kh√¥ng c√≥ chuy·∫øn: hi·ªán th√¥ng b√°o + c√°c n√∫t g·ª£i √Ω
            emptyLayout.visibility = View.VISIBLE
            tripRecyclerView.visibility = View.GONE
        } else {
            // ‚úÖ C√≥ chuy·∫øn ƒëi: hi·ªán danh s√°ch
            emptyLayout.visibility = View.GONE
            tripRecyclerView.visibility = View.VISIBLE

            tripRecyclerView.layoutManager = LinearLayoutManager(requireContext())
            tripRecyclerView.adapter = My_Trip_Upcomming_TripAdapter(listTrips)
        }
    }

    // üëâ T·∫°m th·ªùi tr·∫£ v·ªÅ list tr·ªëng ƒë·ªÉ test UI
    private fun getUpcomingTrips(): List<My_Trip_Upcomming_TripModel> {
        return emptyList() // th·ª≠ thay b·∫±ng danh s√°ch gi·∫£ l·∫≠p n·∫øu c·∫ßn test ph·∫ßn c√≥ d·ªØ li·ªáu
    }
}
